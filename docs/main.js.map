{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["window.addEventListener(\"DOMContentLoaded\", () => {\r\n    const fieldsElement = Array.from(document.querySelectorAll(\".field\"));\r\n    const currentPlayerElement = document.querySelector(\".player span\");\r\n    const resetArrowElement = document.querySelector(\".arrow\");\r\n    const announcer = document.querySelector(\".announcer\");\r\n\r\n    let board = JSON.parse(localStorage.getItem(\"ticTacToeBoard\")) || [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    let currentPlayer = localStorage.getItem(\"ticTacToePlayer\") || \"X\";\r\n    let isGameOn = true;\r\n\r\n    const playerXWon = \"Player X won!\";\r\n    const player0Won = \"Player O won!\";\r\n    const tie = \"Tie!\";\r\n\r\n    const possibleWins = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n    ];\r\n\r\n    function saveGameState() {\r\n        localStorage.setItem(\"ticTacToeBoard\", JSON.stringify(board));\r\n        localStorage.setItem(\"ticTacToePlayer\", currentPlayer);\r\n    }\r\n\r\n    function loadGameState() {\r\n        board.forEach((value, index) => {\r\n            if (value) {\r\n                fieldsElement[index].classList.add(`player${value}`);\r\n            }\r\n        });\r\n        if (currentPlayerElement) {\r\n            currentPlayerElement.textContent = currentPlayer;\r\n        }\r\n    }\r\n\r\n    function updateHoverEffects() {\r\n        fieldsElement.forEach((field) => {\r\n            if (isValidAction(field)) {\r\n                field.classList.remove(\"x-hover\", \"o-hover\");\r\n                field.classList.add(currentPlayer === \"X\" ? \"x-hover\" : \"o-hover\");\r\n            }\r\n        });\r\n    }\r\n\r\n    function resultCheck() {\r\n        let roundFinished = false;\r\n        for (let i = 0; i < possibleWins.length; i++) {\r\n            const [a, b, c] = possibleWins[i];\r\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n                roundFinished = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (roundFinished) {\r\n            announcement(currentPlayer === \"X\" ? playerXWon : player0Won);\r\n            isGameOn = false;\r\n            return;\r\n        }\r\n\r\n        if (!board.includes(\"\")) {\r\n            announcement(tie);\r\n        }\r\n    }\r\n\r\n    function announcement(type) {\r\n        if (!announcer) return;\r\n        switch (type) {\r\n            case player0Won:\r\n                announcer.innerHTML = \"<div class='ann'>Player O won!</div>\";\r\n                break;\r\n            case playerXWon:\r\n                announcer.innerHTML = \"<div class='ann'>Player X won!</div>\";\r\n                break;\r\n            case tie:\r\n                announcer.innerHTML = \"<div class='tie'>Tie!</div>\";\r\n        }\r\n        announcer.classList.remove(\"hide\");\r\n    }\r\n\r\n    function isValidAction(field) {\r\n        return !(field.classList.contains(\"playerX\") || field.classList.contains(\"playerO\"));\r\n    }\r\n\r\n    function updateBoard(index) {\r\n        board[index] = currentPlayer;\r\n        saveGameState();\r\n    }\r\n\r\n    function changePlayer() {\r\n        if (currentPlayerElement) {\r\n            currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n            currentPlayerElement.textContent = currentPlayer;\r\n            saveGameState();\r\n        }\r\n    }\r\n\r\n    function userAction(field, index) {\r\n        if (isValidAction(field) && isGameOn) {\r\n            field.classList.add(`player${currentPlayer}`);\r\n            field.classList.remove(\"x-hover\", \"o-hover\");\r\n            updateBoard(index);\r\n            resultCheck();\r\n            if (isGameOn) {\r\n                changePlayer();\r\n                updateHoverEffects();\r\n            }\r\n        }\r\n    }\r\n\r\n    function resetBoard() {\r\n        board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n        isGameOn = true;\r\n        localStorage.removeItem(\"ticTacToeBoard\");\r\n        localStorage.removeItem(\"ticTacToePlayer\");\r\n        if (announcer) {\r\n            announcer.textContent = \"\";\r\n            announcer.classList.add(\"hide\");\r\n        }\r\n        if (currentPlayer === \"O\") {\r\n            changePlayer();\r\n        }\r\n        fieldsElement.forEach((field) => {\r\n            field.classList.remove(\"playerX\", \"playerO\", \"x-hover\", \"o-hover\");\r\n        });\r\n        updateHoverEffects();\r\n    }\r\n\r\n    fieldsElement.forEach((field, index) => {\r\n        field.addEventListener(\"click\", () => userAction(field, index));\r\n    });\r\n\r\n    if (resetArrowElement) {\r\n        resetArrowElement.addEventListener(\"click\", resetBoard);\r\n    }\r\n\r\n    loadGameState();\r\n    updateHoverEffects();\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
